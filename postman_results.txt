===
=== Use SWAPI (Star Wars API) docs ===
===

https://swapi.dev/documentation

=== 1: height of Darth Vader

get http://swapi.dev/api/people
-> "height": "202"

=== 2: population of the planet Alderaan

get http://swapi.dev/api//planets
"population": "2000000000"

=== 3: name of the manufacturer of the Millennium Falcon

get http://swapi.dev/api/starships
-> "manufacturer": "Corellian Engineering Corporation"

=== 4: name of the species that C-3PO belongs to (multiple URLs)

get http://swapi.dev/api/people
-> "homeworld": "https://swapi.dev/api/planets/1/"

-species": [
                "https://swapi.dev/api/species/2/"
            ] >

get https://swapi.dev/api/species/2
-> "name": "Droid"

=== 5. title of each film that Obi-Wan Kenobi is in (multiple URLs)

get http://swapi.dev/api/people

-> films": [
                "https://swapi.dev/api/films/1/",
                "https://swapi.dev/api/films/2/",
                "https://swapi.dev/api/films/3/",
                "https://swapi.dev/api/films/4/",
                "https://swapi.dev/api/films/5/",
                "https://swapi.dev/api/films/6/"
            ]

1:
-> "title": "A New Hope"

2:
-> "title": "The Empire Strikes Back"

3:
-> "title": "Return of the Jedi"

4:
-> "title": "The Phantom Menace"

5:
-> "title": "Attack of the Clones"

6:
-> "title": "Revenge of the Sith"

== 6: use the search query (the how to on the search query is at the bottom of the Getting Started section of the documentation) to get the information about the Millennium Falcon, it’s a starship

get http://swapi.dev/api/starships/?search=Millen

-> {
    "count": 1,
    "next": null,
    "previous": null,
    "results": [
        {
            "name": "Millennium Falcon",
            "model": "YT-1300 light freighter",
            "manufacturer": "Corellian Engineering Corporation",
            "cost_in_credits": "100000",
            "length": "34.37",
            "max_atmosphering_speed": "1050",
            "crew": "4",
            "passengers": "6",
            "cargo_capacity": "100000",
            "consumables": "2 months",
            "hyperdrive_rating": "0.5",
            "MGLT": "75",
            "starship_class": "Light freighter",
            "pilots": [
                "https://swapi.dev/api/people/13/",
                "https://swapi.dev/api/people/14/",
                "https://swapi.dev/api/people/25/",
                "https://swapi.dev/api/people/31/"
            ],
            "films": [
                "https://swapi.dev/api/films/1/",
                "https://swapi.dev/api/films/2/",
                "https://swapi.dev/api/films/3/"
            ],
            "created": "2014-12-10T16:59:45.094000Z",
            "edited": "2014-12-20T21:23:49.880000Z",
            "url": "https://swapi.dev/api/starships/10/"
        }
    ]
}


===
=== Social Mountain
===


https://app.swaggerhub.com/apis/DevMountain/social_mountain/1.0.0#/posts/post_posts

==1: Check if the POST request accept params, queries, and/or a body. Which one(s) and what information is it expecting to be sent?

-> it only takes a body of the form

{
  "text": "The text used here will appear in the new post object"
}

== 2: What data type does the GET request return?
-> Returns an array of all posts

[
  {
    "id": 0,
    "text": "Hello world!",
    "date": "11 Jan 2018"
  }
]

== 3: What would the URL look like for deleting the post with the id 555? (This post does not exist anymore, but the syntax is the same for existing posts, )

delete https://practiceapi.devmountain.com/api/555

==4: List the possible response codes from the GET request at ‘/posts/filter’

-> 200 Returns an array of filtered posts

[
  {
    "id": 0,
    "text": "Hello world!",
    "date": "11 Jan 2018"
  }
]

-> 409 Request query is missing required text property.

== 5: Create a post whose text is your name, record the URL and body here:

put post https://practiceapi.devmountain.com/api/posts
body
{
  "text": "My favorite color is green"
}

body
{
  "text": "My name is James"
}


== 7: What is the URL to get posts that contain the text “blue”?

get https://practiceapi.devmountain.com/api//posts/filter/?text=blue

== 8: Make a request to GET all the posts. What are the content type and charset of the response? (Hint: look on the Headers)

get https://practiceapi.devmountain.com/api/posts

Content-Type -> application/json; charset=utf-8


== 9: What would cause a PUT request to return a 409 status?

-> Request was missing req.query.id or req.body.text


== 10: What happens if you try to send a query in the GET request URL? Why do you get that response?

get https://practiceapi.devmountain.com/api/posts?text=blue

-> it ignores the query


